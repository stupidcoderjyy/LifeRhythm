{
    qss: "#bg(#gray0) #border('solid', '2px') #daaaa"
    layout_margins: [10,10,10,10]
    align: "top"
    children: ["childA", "childA/childAB", "@namespace:factory_path"]
    layout: {
        type: "std_spacer"
    }
    childA: {
        loader: "external_factory_id"
    }
    childB: {
        type: "std_widget"
        pointer: true
    }
}

（顶层加载器id为文件名）
1) 解析"type"和"loader"，添加任务：创建组件对象或调用外部加载器，设置为workingWidget，将id设置为组件名
workingWidget->preParsing()
2) 解析"qss"、布局信息、对齐、大小、...
3) 解析"pointer"，添加任务：将workingWidget传递到顶层加载器
workingWidget->postParsing()
3) 解析"children"，获取所有子加载器并完成解析。添加任务：执行子加载器，将得到的组件设置为workingWidget的子组件并加进布局管理器
workingWidget->finishedParsing()